# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ –±–∏–∑–Ω–µ—Å-–¥–∞—à–±–æ—Ä–¥–∞
# –≠—Ç–æ—Ç —Å–∫—Ä–∏–ø—Ç —Å–æ–∑–¥–∞–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –Ω–∞ —Å–∞–π—Ç–µ –¥–ª—è –Ω–∞–ø–æ–ª–Ω–µ–Ω–∏—è –º–µ—Ç—Ä–∏–∫

param(
    [int]$Duration = 300,  # –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –≤ —Å–µ–∫—É–Ω–¥–∞—Ö (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é 5 –º–∏–Ω—É—Ç)
    [string]$ApiUrl = "http://localhost:5257",
    [string]$UiUrl = "http://localhost:5216"
)

Write-Host "üéØ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –±–∏–∑–Ω–µ—Å-–¥–∞—à–±–æ—Ä–¥–∞" -ForegroundColor Green
Write-Host "–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: $Duration —Å–µ–∫—É–Ω–¥" -ForegroundColor Yellow
Write-Host "API URL: $ApiUrl" -ForegroundColor Yellow
Write-Host "UI URL: $UiUrl" -ForegroundColor Yellow
Write-Host ""

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å —Å–µ—Ä–≤–∏—Å–æ–≤
try {
    $apiHealth = Invoke-RestMethod -Uri "$ApiUrl/health" -Method Get -TimeoutSec 5
    Write-Host "‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω" -ForegroundColor Green
} catch {
    Write-Host "‚ùå API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: $ApiUrl" -ForegroundColor Red
    exit 1
}

try {
    $uiHealth = Invoke-RestMethod -Uri "$UiUrl/health" -Method Get -TimeoutSec 5
    Write-Host "‚úÖ UI –¥–æ—Å—Ç—É–ø–µ–Ω" -ForegroundColor Green
} catch {
    Write-Host "‚ùå UI –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω: $UiUrl" -ForegroundColor Red
    exit 1
}

Write-Host ""

# –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø—Ä–æ–¥—É–∫—Ç–æ–≤
try {
    $products = Invoke-RestMethod -Uri "$ApiUrl/api/products?pageSize=50" -Method Get
    Write-Host "üì¶ –ó–∞–≥—Ä—É–∂–µ–Ω–æ $($products.Count) –ø—Ä–æ–¥—É–∫—Ç–æ–≤" -ForegroundColor Cyan
} catch {
    Write-Host "‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ã" -ForegroundColor Red
    exit 1
}

if ($products.Count -eq 0) {
    Write-Host "‚ùå –ù–µ—Ç –ø—Ä–æ–¥—É–∫—Ç–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è" -ForegroundColor Red
    exit 1
}

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
$testUser = @{
    email = "testuser@jewelry.com"
    password = "Password123!"
    firstName = "Test"
    lastName = "User"
}

try {
    $registerResponse = Invoke-RestMethod -Uri "$ApiUrl/api/auth/register" -Method Post -Body ($testUser | ConvertTo-Json) -ContentType "application/json"
    Write-Host "üë§ –¢–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω" -ForegroundColor Green
} catch {
    Write-Host "‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –∏–ª–∏ –æ—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏" -ForegroundColor Yellow
}

# –õ–æ–≥–∏–Ω–∏–º—Å—è
try {
    $loginData = @{
        email = $testUser.email
        password = $testUser.password
    }
    $loginResponse = Invoke-RestMethod -Uri "$ApiUrl/api/auth/login" -Method Post -Body ($loginData | ConvertTo-Json) -ContentType "application/json"
    $token = $loginResponse.token
    Write-Host "üîë –ü–æ–ª—É—á–µ–Ω —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏" -ForegroundColor Green
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏" -ForegroundColor Red
    exit 1
}

# –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
$headers = @{
    "Authorization" = "Bearer $token"
    "Content-Type" = "application/json"
}

Write-Host ""
Write-Host "üöÄ –ù–∞—á–∏–Ω–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏..." -ForegroundColor Green
Write-Host ""

$startTime = Get-Date
$endTime = $startTime.AddSeconds($Duration)
$requestCount = 0
$orderCount = 0
$viewCount = 0

# –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞
$categories = @("–ö–æ–ª—å—Ü–∞", "–°–µ—Ä—å–≥–∏", "–û–∂–µ—Ä–µ–ª—å—è", "–ë—Ä–∞—Å–ª–µ—Ç—ã", "–ë—Ä–æ—à–∏")
$searchQueries = @("–∑–æ–ª–æ—Ç–æ", "—Å–µ—Ä–µ–±—Ä–æ", "–±—Ä–∏–ª–ª–∏–∞–Ω—Ç", "–∏–∑—É–º—Ä—É–¥", "—Ä—É–±–∏–Ω", "—Å–∞–ø—Ñ–∏—Ä")

while ((Get-Date) -lt $endTime) {
    $remainingTime = ($endTime - (Get-Date)).TotalSeconds
    
    # –û–±–Ω–æ–≤–ª—è–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –∫–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥
    if ($requestCount % 10 -eq 0) {
        Write-Host "‚è±Ô∏è –û—Å—Ç–∞–ª–æ—Å—å: $([math]::Round($remainingTime)) —Å–µ–∫ | –ó–∞–ø—Ä–æ—Å—ã: $requestCount | –ü—Ä–æ—Å–º–æ—Ç—Ä—ã: $viewCount | –ó–∞–∫–∞–∑—ã: $orderCount" -ForegroundColor Cyan
    }
    
    try {
        # 50% - –ø—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–æ–¥—É–∫—Ç–æ–≤
        if ((Get-Random -Maximum 100) -lt 50) {
            $randomProduct = $products | Get-Random
            $response = Invoke-RestMethod -Uri "$ApiUrl/api/products/$($randomProduct.id)" -Method Get -TimeoutSec 3
            $viewCount++
        }
        # 20% - –ø–æ–∏—Å–∫ –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º
        elseif ((Get-Random -Maximum 100) -lt 70) {
            $randomCategory = $categories | Get-Random
            $response = Invoke-RestMethod -Uri "$ApiUrl/api/products?category=$randomCategory" -Method Get -TimeoutSec 3
        }
        # 15% - —Ç–µ–∫—Å—Ç–æ–≤—ã–π –ø–æ–∏—Å–∫
        elseif ((Get-Random -Maximum 100) -lt 85) {
            $randomQuery = $searchQueries | Get-Random
            $response = Invoke-RestMethod -Uri "$ApiUrl/api/products/search?query=$randomQuery" -Method Get -TimeoutSec 3
        }
        # 15% - —Å–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞
        else {
            $randomProducts = $products | Get-Random -Count (Get-Random -Minimum 1 -Maximum 4)
            $orderItems = @()
            
            foreach ($product in $randomProducts) {
                $orderItems += @{
                    productId = $product.id
                    quantity = Get-Random -Minimum 1 -Maximum 3
                }
            }
            
            $orderData = @{
                shippingAddress = "–¢–µ—Å—Ç–æ–≤—ã–π –∞–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏, –≥. –ú–æ—Å–∫–≤–∞"
                notes = "–¢–µ—Å—Ç–æ–≤—ã–π –∑–∞–∫–∞–∑ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏"
                items = $orderItems
            }
            
            try {
                $orderResponse = Invoke-RestMethod -Uri "$ApiUrl/api/orders" -Method Post -Body ($orderData | ConvertTo-Json -Depth 3) -Headers $headers -TimeoutSec 5
                $orderCount++
                Write-Host "üõí –°–æ–∑–¥–∞–Ω –∑–∞–∫–∞–∑ #$($orderResponse.id) –Ω–∞ —Å—É–º–º—É $($orderResponse.totalAmount)‚ÇΩ" -ForegroundColor Green
                
                # 10% —à–∞–Ω—Å –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–∫–∞–∑
                if ((Get-Random -Maximum 100) -lt 10) {
                    Start-Sleep -Seconds 2
                    $cancelResponse = Invoke-RestMethod -Uri "$ApiUrl/api/orders/$($orderResponse.id)/cancel" -Method Post -Headers $headers -TimeoutSec 5
                    Write-Host "‚ùå –ó–∞–∫–∞–∑ #$($orderResponse.id) –æ—Ç–º–µ–Ω–µ–Ω" -ForegroundColor Yellow
                }
            } catch {
                Write-Host "‚ö†Ô∏è –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–∞: $($_.Exception.Message)" -ForegroundColor Yellow
            }
        }
        
        $requestCount++
        
        # –°–ª—É—á–∞–π–Ω–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –∑–∞–ø—Ä–æ—Å–∞–º–∏ (0.5-2 —Å–µ–∫—É–Ω–¥—ã)
        Start-Sleep -Milliseconds (Get-Random -Minimum 500 -Maximum 2000)
        
    } catch {
        Write-Host "‚ö†Ô∏è –û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞: $($_.Exception.Message)" -ForegroundColor Yellow
    }
}

Write-Host ""
Write-Host "‚úÖ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –∑–∞–≤–µ—Ä—à–µ–Ω–∞!" -ForegroundColor Green
Write-Host "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:" -ForegroundColor Cyan
Write-Host "   ‚Ä¢ –í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤: $requestCount" -ForegroundColor White
Write-Host "   ‚Ä¢ –ü—Ä–æ—Å–º–æ—Ç—Ä—ã —Ç–æ–≤–∞—Ä–æ–≤: $viewCount" -ForegroundColor White
Write-Host "   ‚Ä¢ –°–æ–∑–¥–∞–Ω–æ –∑–∞–∫–∞–∑–æ–≤: $orderCount" -ForegroundColor White
Write-Host "   ‚Ä¢ –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: $Duration —Å–µ–∫—É–Ω–¥" -ForegroundColor White
Write-Host ""
Write-Host "üéØ –¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –æ—Ç–∫—Ä—ã—Ç—å –±–∏–∑–Ω–µ—Å-–¥–∞—à–±–æ—Ä–¥ –≤ Grafana:" -ForegroundColor Green
Write-Host "   http://localhost:3000" -ForegroundColor Yellow
Write-Host "   –õ–æ–≥–∏–Ω: admin / –ü–∞—Ä–æ–ª—å: admin123" -ForegroundColor Yellow